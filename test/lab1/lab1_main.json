{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "azureUserName": {
      "type": "string"
    },
    "azurePassword": {
      "type": "securestring"
    },
    "ODLID": {
      "type": "string"
    },
    "DeploymentID": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "trainerUserName": {
      "type": "string"
    },
    "trainerUserPassword": {
      "type": "string"
    },
    "AppID": {
      "type": "string"
    },
    "AppSecret": {
      "type": "string"
    }
  },
  "variables": {
    "scripturl": "https://experienceazure.blob.core.windows.net/templates/moc/mslearn-openai/scripts/psscript-openai.ps1",
    "userdata": "[concat('$url = \"', variables('scripturl'),'\"; $arg = \"', variables('arg'), '\"')]",
    "arg": "[concat(variables('arg1'),variables('arg2'),variables('arg3'),variables('arg4'),variables('arg5'))]",
    "arg1": "[concat(' -AzureUserName ', parameters('AzureUserName'), ' -AzurePassword ', parameters('AzurePassword'),' -AppID ', parameters('AppID'), ' -AppSecret ', parameters('AppSecret'))]",
    "arg2": "[concat(' -AzureTenantID ', variables('AzureTenantID'), ' -AzureSubscriptionID ', variables('AzureSubscriptionID'))]",
    "arg3": "[concat(' -ODLID ', parameters('ODLID'), ' -DeploymentID ', parameters('DeploymentID'))]",
    "arg4": "[concat(' -vmAdminUsername ', parameters('adminUsername'), ' -vmAdminPassword ', parameters('adminPassword'))]",
    "arg5": "[concat(' -trainerUserName ', parameters('trainerUserName'), ' -trainerUserPassword ', parameters('trainerUserPassword'))]",
    "AzureTenantID": "[subscription().tenantId]",
    "AzureSubscriptionID": "[subscription().subscriptionId]",
    "location": "[resourceGroup().location]",
    "rgName": "[resourceGroup().name]",
    "LabVMName": "[concat('labvm-',parameters('DeploymentID'))]",
    "networkInterfaceName": "[concat(variables('LabVMName'), '-nic')]",
    "publicIpAddressName": "[concat(variables('LabVMName'), '-pip')]",
    "publicIpAddressDNSName": "[concat('lab',parameters('DeploymentID'), 'vm', uniqueString(resourceGroup().id))]",
    "networkSecurityGroupName": "[concat(variables('LabVMName'), '-nsg')]",
    "virtualNetworkName": "[concat(variables('LabVMName'), '-vnet')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/','subnet')]"
  },
  "resources": [
    {
      "name": "[variables('LabVMName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-11-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
      ],
      "plan": {
        "name": "win2019",
        "publisher": "spektra",
        "product": "cloudlabs-windows-jumpvm"
      },
      "properties": {
        "osProfile": {
          "computerName": "[variables('LabVMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "Standard_D2S_v3"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Spektra",
            "offer": "cloudlabs-windows-jumpvm",
            "sku": "win2019",
            "version": "latest"
          },
          "osDisk": {
            "Name": "[concat(variables('LabVMName'),'-osdisk')]",
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          },
          "dataDisks": [
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        },
        "userData": "[base64(variables('userdata'))]"
      }
    },
    {
      "name": "[variables('virtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-09-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "subnet",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('networkInterfaceName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-09-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    },
    {
      "name": "[variables('publicIpAddressName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-09-01",
      "comments": "Public IP",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "tags": {
        "displayName": "Public IP"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[variables('publicIpAddressDNSName')]"
        }
      }
    },
    {
      "name": "[variables('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2022-09-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "priority": 1000,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "DeploymentID": {
      "type": "string",
      "value": "[parameters('DeploymentID')]"
    },
    "LabVM Admin Username": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "LabVM Admin Password": {
      "type": "string",
      "value": "[parameters('adminPassword')]"
    },
    "LabVM DNS Name": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpAddressName'))).dnsSettings.fqdn]"
    },
    "Trainer Password": {
      "type": "String",
      "value": "[parameters('trainerUserPassword')]"
    },
    "Region": {
      "type": "string",
      "value": "[variables('location')]"
    }
  }
}
